server:
  port: 8779

################# mqtt ####################
mqtt:
  host: tcp://120.78.123.10:1883
  username: admin
  password: public
  #服务质量
  #0代表“至多一次”，消息发布完全依赖底层 TCP/IP 网络。会发生消息丢失或重复。这一级别可用于如下情况，环境传感器数据，丢失一次读记录无所谓，因为不久后还会有第二次发送。
  #1代表“至少一次”，确保消息到达，但消息重复可能会发生。
  #2代表“只有一次”，确保消息到达一次。这一级别可用于如下情况，在计费系统中，消息重复或丢失会导致不正确的结果。
  qos: 2
  #服务器列表,多个以英文逗号拼接
  hosts: tcp://120.78.123.10:1883
  #超时时间 单位为秒
  connectionTimeout: 10
  #会话心跳时间 单位为秒
  #若心跳时间过短，在消费端繁忙时会无法完成服务端的心跳回复导致服务端认为消费端下线而无法完成订阅
  #可采用MQ接收端和消费端之间加上队列
  keepAliveInterval: 5
  #消息发布者clientId
  clientId: my_publish_02
  #消息订阅者主题
  topic: server

################# mybatis-plus ####################
mybatis-plus:
  # 扫描 mapper.xml
  mapper-locations: classpath:/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.hua.iotdevice.entity
  typeEnumsPackage: com.hua.iotdevice.entity.enums
  global-config:
    #刷新mapper 调试神器
    db-config:
      #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: id_worker
      #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
      field-strategy: not_empty
      #驼峰下划线转换
      column-underline: true
      #数据库大写下划线转换
      #capital-mode: true
      #逻辑删除配置
      logic-delete-value: Y
      logic-not-delete-value: N
      db-type: mysql
    refresh: true
    #自定义SQL注入器
    #sql-injector: com.baomidou.springboot.xxx
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false

spring:
  ################# db ####################
  datasource:
    url: jdbc:mysql://120.78.123.10:3306/iot
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    #德鲁伊配置
    druid:
      #连接池初始化大小,默认0
      initialSize: 1
      #最大连接数,默认8
      maxActive: 10
      #最小空闲链接,默认0
      minIdle: 1
      #最大空闲链接,默认8
      maxIdle: 10
      #获取链接的最大等待毫秒数,默认一直等待
      maxWait: 60000
      #验证连接是否有效,避免服务端和客户端状态不一致导致异常出现
      validationQuery: SELECT 'X'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒,默认60 000 (60s)
      timeBetweenEvictionRunsMillis: 60000
      #配置一个连接在池中最小生存的时间，单位是毫秒(德鲁伊默认是30分钟,默认最大生存时间是7小时)
      minEvictableIdleTimeMillis: 300000
      #配置监控统计拦截的filters，去掉后监控界面sql无法统计
      filters: stat

  ##################### redis #####################
  redis:
    #cluster:
    #max-redirects: ''   # （普通集群，不使用则不用开启）在群集中执行命令时要遵循的最大重定向数目。
    #nodes: ''  # （普通集群，不使用则不用开启）以逗号分隔的“主机：端口”对列表进行引导。
    database: 0   # 连接工厂使用的数据库索引
    host: 120.78.123.10
    password: redis_cxyt_2019
    port: 6379
    pool:
      maxActive: 5000  # 池在给定时间可以分配的最大连接数。使用负值无限制。
      maxIdle: 5000    # 池中“空闲”连接的最大数量。使用负值表示无限数量的空闲连接。
      maxWait: 10000   # 连接分配在池被耗尽时抛出异常之前应该阻塞的最长时间量（以毫秒为单位）。使用负值可以无限期地阻止。
      minIdle: 10    # 目标为保持在池中的最小空闲连接数。这个设置只有在正面的情况下才有效果。
      #sentinel:
      #master: ''    # （哨兵模式，不使用则不用开启）Redis服务器的名称。
      #nodes: ''     # （哨兵模式，不使用则不用开启）主机：端口对的逗号分隔列表。
    ssl: false       # 启用SSL支持
    timeout: 60000       # 以毫秒为单位的连接超时。

##################### log #####################
logging:
  config: classpath:log4j2_prd.xml
  level:
    com.hua.iotdevice: DEBUG